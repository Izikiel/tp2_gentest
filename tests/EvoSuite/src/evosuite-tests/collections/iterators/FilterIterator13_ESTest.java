/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 12 01:58:10 GMT 2017
 */

package collections.iterators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import collections.Predicate;
import collections.functors.NotNullPredicate;
import collections.functors.TruePredicate;
import collections.iterators.FilterIterator;
import java.util.Iterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class FilterIterator13_ESTest extends FilterIterator13_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FilterIterator filterIterator0 = new FilterIterator();
      Predicate predicate0 = TruePredicate.getInstance();
      FilterIterator filterIterator1 = new FilterIterator(filterIterator0, predicate0);
      Predicate predicate1 = filterIterator1.getPredicate();
      assertSame(predicate0, predicate1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FilterIterator filterIterator0 = new FilterIterator();
      // Undeclared exception!
      try { 
        filterIterator0.hasNext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("collections.iterators.FilterIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FilterIterator filterIterator0 = new FilterIterator();
      // Undeclared exception!
      try { 
        filterIterator0.remove();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("collections.iterators.FilterIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FilterIterator filterIterator0 = new FilterIterator();
      FilterIterator filterIterator1 = new FilterIterator();
      filterIterator0.setIterator(filterIterator1);
      // Undeclared exception!
      try { 
        filterIterator0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("collections.iterators.FilterIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FilterIterator filterIterator0 = new FilterIterator();
      NotNullPredicate notNullPredicate0 = (NotNullPredicate)NotNullPredicate.INSTANCE;
      filterIterator0.setPredicate(notNullPredicate0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FilterIterator filterIterator0 = new FilterIterator();
      TruePredicate truePredicate0 = (TruePredicate)TruePredicate.INSTANCE;
      FilterIterator filterIterator1 = new FilterIterator(filterIterator0, truePredicate0);
      Iterator iterator0 = filterIterator1.getIterator();
      assertSame(filterIterator0, iterator0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FilterIterator filterIterator0 = new FilterIterator();
      Iterator iterator0 = filterIterator0.getIterator();
      assertNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FilterIterator filterIterator0 = new FilterIterator();
      FilterIterator filterIterator1 = new FilterIterator(filterIterator0);
      assertFalse(filterIterator1.equals((Object)filterIterator0));
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FilterIterator filterIterator0 = new FilterIterator();
      Predicate predicate0 = filterIterator0.getPredicate();
      assertNull(predicate0);
  }
}
